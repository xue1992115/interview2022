// 1、标记清除
// 当变量进行执行环境时，比如函数中声明一个变量，垃圾回收器会表明该变量进入了环境，当变量
// 离开时会将其标记了离开环境
// 垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），
// 在这些完成之后仍存在标记的就是要删除的变量了;
// 2、引用计数
// 引用计数的策略是跟踪记录每个值被使用的次数
// 当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加1，如果该变量的值变成了另外一个，则这个值得引用次数减1，
// 当这个值的引用次数变为0的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为0的值占用的空间
